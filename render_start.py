#!/usr/bin/env python3
"""
Script de d√©marrage optimis√© pour Render
G√®re l'initialisation de la base de donn√©es et les erreurs courantes
"""

import os
import sys
import sqlite3
from datetime import datetime

def init_database():
    """Initialiser la base de donn√©es avec gestion d'erreurs"""
    try:
        # Cr√©er les r√©pertoires n√©cessaires
        os.makedirs('static', exist_ok=True)
        os.makedirs('uploads', exist_ok=True)
        
        # Importer et utiliser la configuration de base de donn√©es
        from database_config import init_tables
        init_tables()
        
        print("‚úÖ Base de donn√©es initialis√©e avec succ√®s")
        return True
        
    except Exception as e:
        print(f"‚ùå Erreur initialisation base de donn√©es: {e}")
        return False

def main():
    """Point d'entr√©e principal pour Render"""
    print("üöÄ D√©marrage de l'application Investment Platform sur Render...")
    
    # Initialiser la base de donn√©es
    if not init_database():
        print("‚ùå Impossible d'initialiser la base de donn√©es")
        sys.exit(1)
    
    # Importer et d√©marrer l'application Flask
    try:
        from main import app
        
        # Configuration pour Render
        port = int(os.environ.get('PORT', 5000))
        debug = os.environ.get('FLASK_ENV') != 'production'
        
        print(f"üåê D√©marrage sur le port {port}")
        app.run(host='0.0.0.0', port=port, debug=debug)
        
    except Exception as e:
        print(f"‚ùå Erreur d√©marrage application: {e}")
        sys.exit(1)

if __name__ == "__main__":
    main()
